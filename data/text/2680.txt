Q: Common Lisp on Mac OS X? Is there a comparison between the different versions of Common Lisp for Mac OS X? Is there a clear frontrunner?

A: For comparisons, see: http://common-lisp.net/~dlw/LispSurvey.html
Agreed with the others: yes, use SBCL or CCL.  
CCL makes it easier to invoke ObjC libraries, such as for writing native Mac Apps.  That becomes the tie-breaker for some.  (Personally, I've enjoyed using both but tend to stay current on SBCL as my main compiler for server software.)
For completeness: 
CCL is Clozure CL (not to be confused with one spelled using "j" in middle, which is another dialect than Common Lisp).  SBCL compiles to faster code, and CCL has shorter compile times.  Both are solid compilers.
For targeting iOS/iPhone/iPad, there's been some success with ECL.  See: http://funcall.posterous.com/tag/iphone  But I wouldn't consider this a front-runner and haven't actually used it myself yet beyond samples posted on that blog.
Although MacOSX thread support is considered experimental with SBCL and self tests will fail if you compile from sources (which is required to enable threads), threads work well enough for most cases.  I've deployed heavily threaded production code by developing on MacOSX then releasing to servers running FreeBSD (which also has similar issues with threads) and Debian/Ubuntu Linux (very stable).  This has served me well for the past 5-6 years, including at a few start-ups.
QuickLisp (for obtaining libraries) is very stable on SBCL/MacOSX.  Haven't tried it on CCL but should be rock solid there too!

A: A friend of mine who is an avid Lisper recommends SBCL. It's easy to install/maintain with Homebrew (my preference) or MacPorts.

A: Not sure about objective comparison sites but I've used clozure in the past a sort of  off spring of digitool's mcl (dead by now, but code is open sourced I think).
I think there a are other possibilities as well, emacs being the first to come in mind but that is not common lisp while giving it a second thought.
