Q: Can Quick Look be made into an application to preview URLs in apps like Twitter? Lion's improved Quick Look can now preview web pages. The full screen view and quick launching make it superb for peeking at a web page without having to launch a browser; which, in my case, always has many tabs to open from a previous session that I plan to revisit later.
I use an app called Choosy that will let me choose which browser to use when I click on a link [outside the browser]. This alleviates the concern that Quick Look isn't suitable as a permanent replacement. I would like to use Quick Look as a choice of browsers, but I've since discovered that Quick Look isn't an application.
Can an app be made that will workaround this road bump? An app that just opens items in Quick Look that simply functions as a way to choose it as an opener or as a choice in Choosy. My main concern is that I want to be able to open a URL in the Twitter app and have it open in Quick Look. I have been spoiled by Twitter for iOS in this regard. Also, it would also be nice to use it as the default opener for images as well.

A: I've written an AppleScript wrapper for qlmanage called "Have A Quick Look":
http://dougscripts.com/471
However, in Lion, the qlmanage app opens and causes some conflicts with iTunes. Oh well.

A: I was able to create an application using Automator to open files in Quick Look. I used the "View With Quick Look" action found at this website and it works without issue for local files - right click, tell it to open using the app, and presto! Opens in Quick Look.
However - I am not sure of a way to pass this action a URL. The description states that it only takes files/folders as inputs, and to be sure, I'm not familiar with how to get Quick Look to work on something that isn't part of the filesystem.
I was thinking that perhaps you could download a copy of the page and Quick Look that, but at that point you could just open it up in the browser.

A: This URL-previewing functionality does not appear to be based on Quick Look, rather it's a Data Detector. As such, there's unfortunately no programmatic way to activate it.
However, you could make a simple app which previews a page in a web view, rather than trying to use the existing system.

A: It does not seem to be an app. Rather, it is a framework: /System/Library/Frameworks/QuickLook.framework/. Check out the qlmanage command, and notice that /usr/bin/qlmanage is a symbolic link pointing inside the framework.
It might be possible to create some applescript that runs qlmanage. Then you could save the script as an application (from Applescript Editor) and use that as your file opener.

A: Do you want it to work similar to Quick Look in Mail for URL's included in emails? If you investigate how OSX mail works you should find an answer. I have looked for a framework that will allow me to do this for some time now, I there will probably be something that can help you in the OSX developers site, there is a lot of sample code that apple provides, this code might include an example of how to use the Quick Look framework, but there are 372 examples to sort though. Here is the developers page for the Quick look framwork 

A: YES! And I just installed it; it's a chrome extension called
URL RENDER
(available in the google repository of extensions)
I don't know if it'll be short-lived and find a way to annoy me, but for now..? It's like quicklook (mac users will understand) for chrome.

A: Just wanted to remind people you can open a QuickLook from the command line:
qlmanage -p foo.txt   # preview window
qlmanage -t bar.jpg   # thumbnail window

# support >1 doc via left/right arrows
qlmanage -p download.png image.png
qlmanage -p test.txt scrum-guide-us.pdf 

So, this works, too (more related what you're talking about):
qlmanage -p Google.webloc  # link to Google

and of course a .webloc file is just this xml text
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>URL</key>
    <string>https://www.google.com/</string>
</dict>
</plist>

So, you could maybe do an ugly hack whereby you create a /tmp file with the URL you want in it, and call qlmanage against it...
