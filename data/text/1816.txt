Q: OS X 10.6 : Automating new system provisioning with scripts I've been working on this for days but simply cannot find the correct references to make it work.
The idea is to have a script that will baseline newly purchased Macs that comes into the company with basic stuffs like set autologin to off, create a new admin user (for remote admins to access for support, set password to unlock screensaver and etc) .
Sample list for baseline that admins have to do on each new machine:

Click the Login Options button
Set Automatic Login: OFF
Check: Show the Restart, Sleep, and Shutdown buttons
Uncheck: Show input menu in login window
Uncheck: Show password hints
Uncheck: Use voice over in the login window
Check: Show fast user switching menu as Short Name

(note: this is only part of a long list to do on each machine)
I've managed to find some references to make some parts work. Like autologin can be unset with "defaults write /Library/Preferences/.GlobalPreferences com.apple.userspref.DisableAutoLogin -bool TRUE" and I've kinda found ways to muscle in a new user creation (including prompts) with applescript and shell commands.
But generally its tough finding ways to do somewhat simple things like turn on password to get out of screensaver or to allow fast user switching. References are either too limited or just no where to be seen (e.g. i can unset autologin via cli but the very next setting on the system preference "show restart, sleep and shutdown buttons" is somewhere else and i can't find any command line to make it set)
Does anyone have any ideas on a list, document, reference or anything of where each setting on the system resides so that I can be pointed to make it work? or maybe sample scripts for the above example...
My thanks for reading thus far - a huge thank you for whoever that has any info on the above.

A: There is a better way to do this. The IT department at my company maintains a disk image with all of the settings in place they need to administer the Macs when they are received-including software in place registered with site licenses. They open the Macs and simply replace what's on the hard drive with the disk image.
Scripting is a logical path, but scripting System Preferences is a real bear because you have to go with GUI Scripting which is rife with problems, the least of which trying to decipher UIElementInspector to get what you need.

A: You're talking about things that would probably be easier to do with a mix UI scripting, and scripting System Preferences.UI scripting is where you write an AppleScript that opens System Preferences and clicks buttons. Scripting System Preferences directly is where you talk to the app. Support for this is... patchy. You can use one where the other fails.
Here is some info about scripting System Preferences. Some info on UI scripting SysPrefs is here, and better examples can be downloaded here (direct link). They are installed to your ~/Library/Scripts/System Preferences folder.
Hope this helps. You can post back with specific questions

A: Even if you can't script all these change, try a different approach:


*

*Make the changes on your computer

*Find out what files/folders are modified by these changes

*Ship these few files to the remote computers with instructions (or a script) that copies them to the correct locations


A: From my experience, there are 2 ways to go: 
1: create a "master"-image and distribute it on to your new Macs (I do this through NetRestore) which takes more time to invest in the beginning but is easier to handle for your Windows-admins to handle (just re-imaging a Mac is easy)
2: Download Apples Server Admin Tools, install them on a fresh Mac and use the Workgroup Manager to configure the "localhost" settings the way you want them. Those MCX settings then can be exported and it´s easier to cope with system updates (you don´t have to re-create a new "master"-image)
For more information I´d suggest reading through www.afp548.com and www.macenterprise.org - they have loads of information on these topics.

A: thank you folks - coming from someone who has almost zero knowledge of supporting macs on an enterprise level, i really appreciate all the replies. for one, it has broadened the spectrum of how and what I can do to achieve the said target is. 
i've took up most of your pointers and they have forked into many other areas of exploration and learning of ways and means to get the job at hand done. i've decided on a "blended" solution that kinda gets it done - provision with applescript, calling in a shell script and a little bit of UI scripting all done within a single double clickable executable - that should help with the pressure of quick roll out for now.
I am working on laying on the imaging route for our next big wave of macs coming in as i type now :)  
