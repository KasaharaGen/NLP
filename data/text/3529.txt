Q: OS X Terminal "must have" utilities I've just read with pleasure, and learned a lot from these questions :


*

*OS X Terminal Tips and Tricks

*OS X Hidden features and nice tips & tricks

*OS X Applications you can't live without
But I didn't find in these some of my favorites tools, which I use on a daily basis, and I think that's because these are OSX/Terminal intended tools, not fitting well in above questions.
My favorites are, by order of preference: oh-my-zsh, homebrew (but also macports), janus...
These tools having in common :


*

*Terminal: install and use

*OSX Intended: brew is, git is not!

*Easy Install: one liner, ie. git clone; wget ... etc.

*Extensible: possibly has extensions or simple API (eg. oh-my-zsh with plugins, brew with formulas, janus with bundled vim plugins...)

*Often open source, free, hosted on github, scripted, mostly (but not only!) with ruby...


Do you know any other similar must-have tools?
I would love to discover new ones!
Please only include one utility per answer. Also, please don't add duplicates. Check first before posting. If you see a duplicate, kindly downvote the answer and inform the author by leaving a comment.

A: Homebrew

The missing package manager for OS X.

It is an amazing package manager, very light and easy to use. KIS Principle, that makes me think of archlinux. Its community is big and very active.
(see also macports which brew doesn't replace completely, I prefer installing packages with brew, but some complex ones are only on macports)
See also brew tap command which provides some missing formulas that can be useful like when you need latest php version > brew tap josegonzalez/php.
(Homebrew has a policy of not replacing system components, but hey, sometimes you have to)

A: Lunchy (Free)

A friendly wrapper for launchctl. Start your agents and go to lunch!

A convenient tool to manage (start/stop/restart) OSX services/daemons...
That's a ruby gem: gem install lunchy

A: Bropages:
bro pages are a highly readable supplement to man pages. Bro pages show concise, common-case examples for Unix commands.
Example:
$ bro find
14 entries for find -- submit your own example with "bro add find"

# Executes a command on the files and folders matching a given pattern, in this case, output the last lines of each .foo file in the current folder and subfolders.
find . -name "*.foo" -exec tail {} \;

        bro thanks      to upvote (24)
        bro ...no       to downvote (0)

.......................................................................................................................................

# Outputs all the file names/paths that start with the name "Casey".  Searches recursively starting from my current directory (.)
# Throws out any error output by sending it to /dev/null
find . -name "Casey*" 2>/dev/null

        bro thanks 2    to upvote (16)
        bro ...no 2     to downvote (0)

.......................................................................................................................................

# Finds all files in and under the current directory that contain 'foo' in their name
find . -iname '*foo*'

        bro thanks 3    to upvote (13)
        bro ...no 3     to downvote (1)


A: Janus + macvim

Janus is a basic distribution of vim plugins and tools intended to be run on top of the latest MacVIM snapshot

install macvim with homebrew brew install macvim
and follow the (easy) janus instructions, and you are set with a powerfull text editor that has been pre-configured for you by brilliants minds. The learning curve of vim is scary at first sight, but once you are confortable with it, you'll never go back (or maybe to emacs...)
(fyi, TextMate has been abandoned to its profit by many coders)
That might sounds strange, but I prefer using vim in iTerm2 than macvim... (vim is bundled in macvim, just use brew install macvim --override-system-vim)

A: iTerm2 (Free)
Mentioned in comments, but it's essential, so for emphasis...

A: ProfontX (Free)
My favorite programming and terminal font on MacOS. (ProfontX is a corrected version of Profont which had issues with some characters)

A: Boxen - Automated Mac OS configuration and build, install/update software. It helps saving a lot of time when you want exactly the same setup, (software, version) in the development team and also allow each individual to install other tools to increase productivity.

A: Ack (Free)
Great for searching text files, you'll never have to use a find/grep combination again.

Ack has two nice integration plugins for major OSX text editors:

*

*MacVim : ack.vim

*TextMate : AckMate

A: oh-my-zsh (Free)

A handful of functions, auto-complete helpers, and stuff that makes you shout…

“OH MY ZSHELL!”


Made me love shell when I was just using it when I had to...
Zsh is "bash on steroids", with oh-my-zsh and all its plugins, many specifics to OSX, shell is a lot more user friendly and powerful... Oh also themes are pretty cool.

Also worth giving a look, some alternatives / complements zsh based stuff :

*

*prezto Is a complete rewrite of oh-my-zsh, clean and a lot more active, now using it :)

*zsh-users (Free) Some very nice zsh stuff (love the syntax highlighting)

*zcm (Free) zsh configuration manager (inspired from oh-my-zsh)

A: lolcat (Free)


A: Visor
is an interesting utility. It describes itself as:

a system-wide terminal on a hot-key

Quite cool. It drops down a terminal on the press of a key-combination.
EDIT:

Visor has been renamed to TotalTerminal... (see other answer, this could/should be deleted)


A: Go2Shell (Free)
Not a terminal utility, but a utility for using Terminal. It puts a button in the Finder toolbar and when pressed it creates a new Terminal window cd'ed to that directory.
edit:
The developers are saying that the version of the app available directly from them has more features than the version on the App Store. I've updated the link to go to their page, but the App Store version is still available here.

A: bash-it (Free)
An alternative to oh-my-zsh (see above). A really useful collection of scripts, aliases and functions for bash. Also provides a nice plugin system for adding your own additions.

A: Shell functions
I can't live without this.


*

*One command to update them all.
update() {
    local brew="brew update; brew upgrade;"
    local gisty="gisty pull_all; gisty sync_delete"
    local gem="gem update;"
    local pip="pip freeze --local | grep -v '^\-e' | cut -d = -f 1  | xargs pip install -U -q"
    sh -c $brew$gisty; sudo sh -c $gem$pip
}

Obviously you can add more commands according to the package managers you use. This is made by me.

*Change directory to the current Finder directory
cdf() {
    target=`osascript -e 'tell application "Finder" to if (count of Finder windows) > 0 then get POSIX path of (target of front Finder window as text)'`
    if [ "$target" != "" ]; then
        cd "$target"; pwd
    else
        echo 'No Finder window found' >&2
    fi
}

cdf to open the Finder directory in the terminal and open . to open in Finder the directory terminal directory.
Source

*Get colors in manual pages
man() {
    env \
    LESS_TERMCAP_mb=$(printf "\e[1;31m") \
    LESS_TERMCAP_md=$(printf "\e[1;31m") \
    LESS_TERMCAP_me=$(printf "\e[0m") \
    LESS_TERMCAP_se=$(printf "\e[0m") \
    LESS_TERMCAP_so=$(printf "\e[1;44;33m") \
    LESS_TERMCAP_ue=$(printf "\e[0m") \
    LESS_TERMCAP_us=$(printf "\e[1;32m") \
    man "$@"
}

Source

*Use a RSA private key in git
git(){
    trap 'rm -f /tmp/.git_ssh.$$' 0
    SSH_KEY="~/.ssh/id_rsa"
    echo "ssh -i $SSH_KEY \$@" > /tmp/.git_ssh.$$
    chmod +x /tmp/.git_ssh.$$
    export GIT_SSH=/tmp/.git_ssh.$$
    [ "$1" = "git" ] && shift
    git "$@"
}

I noticed that putting this into your .rc will slow down git. 
If you want to avoid this you should unpack the function and save it as a shell script in your $PATH
Source
(I modified it a bit. The original asks every time for the key path.)

*Syntax highlighting in cat
cat() {
    local out colored
    out=$(/bin/cat $@)
    colored=$(echo $out | pygmentize -f console -g 2>/dev/null)
    [[ -n $colored ]] && echo "$colored" || echo "$out"
}

This can be quite slow since it needs to parse the entire file before printing  it.
Never use this on a binary file!
pip install Pygments to install pygments.

A: Inconsolata-dz (Free)
This is a slight modification of the original Inconsolata.
It is a fantastic monospaced font for use with Terminal.app, TextMate, MacVim and anywhere else you need one. A must have for any coder.


A: Bwana (Free)
Not technically a terminal command but very handy for quick manpage lookups by allowing url of: "man:ls" to show html page of the manpage in your browser.

A: TotalTerminal (Free)
Tabs, visor, hotkeys, very simple and reliable. Well maintained with frequent updates.


A: MTR (Free) by BitWizard - combines ping and traceroute
Installation: brew install mtr --no-gtk
                                            Packets               Pings
 Host                                     Loss%   Snt   Last   Avg  Best  Wrst StDev
 1. 217.70.191.253                         0.0%    32    0.5   1.7   0.3  17.6   3.8
 2. p252-core4-d.paris.gandi.net           0.0%    32    0.5   1.1   0.3  17.8   3.1
 3. xe2-1-24-vcore1-dc1.balt.gandi.net     0.0%    32   97.4 105.7  96.9 187.7  22.0
 4. eqixva-google-gige.google.com         80.0%    31  100.8 100.2  99.6 100.8   0.4
 5. 209.85.252.80                          0.0%    31  100.3 108.0 100.0 210.4  24.3
 6. 209.85.243.114                         0.0%    31  111.9 112.6 111.7 118.6   1.2
 7. 64.233.174.87                          0.0%    31  119.8 112.7 111.6 119.8   1.9
    64.233.174.117
 8. 209.85.242.181                        16.1%    31  112.0 117.0 111.8 125.2   5.1
    209.85.253.185
    209.85.242.177
    209.85.253.181
 9. vx-in-f105.1e100.net                   0.0%    31  112.0 112.3 111.6 116.4   0.8


whatmask (Free) by Laffey Computer Imaging - IPv4 subnet calculator
Download OS X binary. Also online.
$ whatmask 192.168.5.6/22

------------------------------------------------
           TCP/IP NETWORK INFORMATION
------------------------------------------------
IP Entered = ..................: 192.168.5.6
CIDR = ........................: /22
Netmask = .....................: 255.255.252.0
Netmask (hex) = ...............: 0xfffffc00
Wildcard Bits = ...............: 0.0.3.255
------------------------------------------------
Network Address = .............: 192.168.4.0
Broadcast Address = ...........: 192.168.7.255
Usable IP Addresses = .........: 1,022
First Usable IP Address = .....: 192.168.4.1
Last Usable IP Address = ......: 192.168.7.254


A: Autojump (free)
Great command line utility that stores cd commands and automatically creates an autocomplete shortcut to your most accessed directories.
Even better, if several directories have a similar name (starting with the same characters), Autojump will simply pick the one you most commonly go to. You won't have to type the whole name.
Example:
cd project1
j p will now take you straight to the full project1 path.
Now what if you create a similar folder called project2 which you also access often (but less than project1), Autojump will assign a lesser weight to project2 and take you straight to project1.
If you hit TAB after typing "pro" for instance, your shell will display project__, hinting at the fact that there are more than 1 matching directory. Another TAB hit will display the list of matching directories and allow you to select the one you mean.
Note: I've recently installed ZSH and noted some interference due to the autocomplete features. Autojump works perfectly on a vanilla Terminal.

A: Solarized (Free)
Color scheme for Terminal.
Lion supports ANSI colors so hack-y things like SIMBL are no longer required.
For Snow Leopard and earlier, you'll need SIMBL installed to make the most of it since color support in Terminal.app is limited.

A: MacPorts

The MacPorts Project is an open-source community initiative to design an easy-to-use system for compiling, installing, and upgrading either command-line, X11 or Aqua based open-source software on the Mac OS X operating system.

Many people will tell you don't use macport, use homebrew instead. That is mostly true, homebrew is lighter and easier to use. But macports offers way more packages, and some of them will never come to homebrew, because of their different philosophy. (I use both, for different needs)
For example, I recommend GTK in its quartz (native OSX) variant :
sudo port install gtk2 +no_x11+quartz

Then when you install a package that can benefit from it, like wireshark... You will get a native OSX UI, faster and looking much better than X11...

A: DTerm (Free) by Decimus Software
Similar to Visor, but with some extra friendly features (also appears to be in active development)

A: The Silver Searcher (Free)
A code-searching tool similar to ack, but faster.
Install it with brew
brew install the_silver_searcher


A: Jodies.de ipcalc
   /usr/local/Cellar/ipcalc/0.41: 4 files, 40K, built in 2 seconds
 bash-3.2$ ipcalc 10.20.30.40/8
 Address:   10.20.30.40          00001010. 00010100.00011110.00101000
 Netmask:   255.0.0.0 = 8        11111111. 00000000.00000000.00000000
 Wildcard:  0.255.255.255        00000000. 11111111.11111111.11111111
 =>
 Network:   10.0.0.0/8           00001010. 00000000.00000000.00000000
 HostMin:   10.0.0.1             00001010. 00000000.00000000.00000001
 HostMax:   10.255.255.254       00001010. 11111111.11111111.11111110
 Broadcast: 10.255.255.255       00001010. 11111111.11111111.11111111
 Hosts/Net: 16777214              Class A, Private Internet

It is also available in HomeBrew:
 bash-3.2$ brew install ipcalc
 ==> Downloading http://jodies.de/ipcalc-archive/ipcalc-0.41.tar.gz


A: I like Color Maven
alias maven="command mvn"
color_maven() {
  maven $* | sed -e "s/\(\[INFO\]\ \-.*\)/[36;01m\1[m/g" \
               -e "s/\(\[INFO\]\ >>> .*\)/[32;01m\1[m/g" \
               -e "s/\(\[INFO\]\ <<< .*\)/[32;01m\1[m/g" \
               -e "s/\(\[INFO\]\ Building .*\)/[36;01m\1[m/g" \
               -e "s/\(\[INFO\]\ \[.*\)/01m\1[m/g" \
               -e "s/\(\[INFO\]\ BUILD SUCCESS\)/[01;32m\1[m/g" \
               -e "s/\(\[INFO\]\ BUILD FAILURE\)/[01;31m\1[m/g" \
               -e "s/\(\[WARNING\].*\)/[01;33m\1[m/g" \
               -e "s/\(WARN.*\)/[01;33m\1[m/g" \
               -e "s/\(DEBUG.*\)/[01;33m\1[m/g" \
               -e "s/\(\[ERROR\].*\)/[01;31m\1[m/g" \
               -e "s/Tests run: \([^,]*\), Failures: \([^,]*\), Errors: \([^,]*\), Skipped: \([^,]*\)/[32mTests run: \1[m, Failures: [01;31m\2[m, Errors: [01;31m\3[m, Skipped: [01;33m\4[m/g"
}
alias mvn=color_maven

Color LS
alias ls='ls -FG'
export LSCOLORS=gxBxhxDxfxhxhxhxhxcxcx
-or-
echo export CLICOLOR >> ~/.bashrc
echo export CLICOLOR >> ~/.bash_profile

