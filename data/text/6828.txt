Q: Does iOS have a transfer/write speed limit? Any time I want to do a batch transfer over FTP to my iPad (Using AVPlayer or Photo Privacy) the transfer only lasts for a short while before the application shuts down and I'm back to the iPad dashboard. Is this due to some internal security meassures in the iPad breaking any application that writes too much data? If not, what could it be that makes FTP servers on completely separate apps crash in the same way?
Any answers even remotely helpful would be appreciated
Thanks

EDIT
I am of course running the application in the foreground. Also the iPad is not going to sleep. I simply start the FTP transfer, and after a few seconds or minutes the application abruptly quits and I'm back at the iOS dashboard.

A: When any app quits abruptly and you are back at the springboard - that is a crash. iOS is designed to not make a big deal of crashes since most of the time they are temporary and starting up the program again will clean up the error. That doesn't appear to be happening in your case. 
You can confirm it the next time you connect the device to iTunes or Xcode. Xcode let's you look into the engineering details as to why the program is crashing. 
ITunes instead copies the crash report to your ~/Library/Logs/CrashReporter/MobileDevice folder. The first time this happens, you are asked if you want to send diagnostic information to apple. This sort of crash will then be sent in the future. 
You can connect your device, right click on it in iTunes and reset all warnings to get the asking again - that way you can confirm that this is due to the program crashing and not some other cause. 

A: iOS will kill any process at any time when it's not in the foreground. It isn't as much a speed limit or any metering of the data as a rigidly enforced power usage control.
You need to keep tapping on the display to show you as the human in charge need the device to not to go to sleep. 

Are you keeping these apps running in the foreground? If not - you will have to contact the developer to see if they are using the background process calls to tell iOS not to kill them immediately. 
If the developer is using the correct calls for these processes to keep going in the background - then it's up to you to not run other large programs that will cause iOS to kill off the background processes.
You can use the multitasking bar to "force quit" all the apps before you start the one you want to stay running under FTP - then leave it and start a second app. This is usually enough to not cause memory pressure and have iOS kill off the other FTP program while it's doing a short transfer. If you expect the transfer to go 3 to 5 minutes - you may have to baby sit that app - preventing another app from running and keeping the screen alive. iOS prefers to kill anything that would sap the battery - a long FTP process is exactly what iOS is designed to pause as quickly as possible.
