Q: Is there any way to get a pop-up notification on my iPhone or iPad when mail arrives? I have gmail set up to send me "true" push notifications (using the exchange server setup).  So my mail arrives in realtime, and I instantly get badges on my springboard screen to indicate new messages.  
But I want to be able to get a pop-up with the sender and subject, like I would with an SMS, or an IM using Beejive.  Is there really no way to do this?  It would be especially helpful when I'm in another app, and don't mind the pop-up's interruption, but would like to know who the message is from before deciding to leave the app to check mail.

A: With the release of iOS 5 mail can now appera as a pop up box style notifacation.
Goto Settings>Notifications>Mail> the choose "Alerts" in the alert style menu.

you will then have something that looks like a message notification when an email arrives

A: Give BoxCar a go.
I use it in a similar way for Twitter Direct Message notifications.

A: I use a combination of Notify and Prowl, running on a spare Mac.  I found so many other uses for Prowl, such as sending push notifications from a script.

A: Don't use the standard Gmail configuration from iPhone, use Google Sync. 
Here: Google Sync: Set Up Your Apple Device for Google SyncShare Comment

A: This isn't a way to fix your issue now, but I believe iOS 5 will be able to do what you want when it's released this fall according to:
http://www.apple.com/ios/ios5/features.html#notification
I see screenshots with mail notifications on the top of the screen and I believe these can be configured to be current-style pop-ups per app.

A: I use a combo of Apple Mail rules, an AppleScript, and Howl (another growl app similar to Prowl mentioned above).
Name the Mail rule like so: "growl-TestPost" as indicated in the AppleScript, then set up the considitons and trigger this AppleScript to run. Then set up your Growl display style to use that of Howl (or Prowl).
Here is the AppleScript, unfortunately I do not have info on the original author's script which I modified:
on run
    -- at current, the registration is done whenever you launch the script, 
    -- and also below whenever the the script itself is run by Mail
    -- (that let's users make new notification on the fly, sort of...)
    -- could probably find a more graceful semaphor, but...
    register()
end run

using terms from application "Mail"
    on perform mail action with messages messageList for rule theRule
        set theRuleName to name of theRule
        if theRuleName does not start with "growl-" then return

        register()
        -- extract notification type from rule name
        set noteType to characters 7 thru (length of theRuleName) of theRuleName as text
        repeat with thisMessage in messageList

            -- basic information for notification
            set theSender to sender of thisMessage
            set theSubject to subject of thisMessage
            set theText to (content of thisMessage)
            set tid to AppleScript's text item delimiters
            set AppleScript's text item delimiters to " "
            try
                set theSummary to (text items 1 through 20 of theText) as text
            on error
                set theSummary to theText
            end try
            set AppleScript's text item delimiters to tid

            -- notify
            tell application "GrowlHelperApp" to notify with name noteType ¬
                title noteType description ¬
                "From: " & theSender & return & "Subject: " & theSubject ¬
                application name "MailGrowl"
        end repeat
        -- if we want to coalesce or order the notifications, then we'd put the 
        -- notifications into an array above and notify GHA here.  I'm not completely
        -- on the structures that are required for grouped messages, though..
    end perform mail action with messages
end using terms from

to register()
    tell application "Mail"
        set ruleList to name of every rule whose name begins with "growl"
    end tell
    set noteTypes to {}
    repeat with theRuleName in ruleList
        set end of noteTypes to (characters 7 thru (length of theRuleName) of theRuleName as text)
    end repeat
    tell application "GrowlHelperApp"
        register as application "MailGrowl" all notifications noteTypes ¬
            default notifications noteTypes ¬
            icon of application "Mail"
    end tell
end register

