Q: Many Compile Warnings while Installing MacPorts I recently upgraded to Mac OS X Lion 10.7.2.  I also installed the latest version of Xcode (version 4.2) in order to build MacPorts.  After doing this, I had no problems executing sudo port selfupdate, which downloaded the latest version of MacPorts (version 2.0.3). However, I saw a LOT of compile warnings, especially for packages/ports like Python, when executing sudo port upgrade outdated.  For other packages/ports I noticed that a couple of compiler options were obsolete and/or ignored.  Otherwise, I had no problem rebuilding MacPorts.
Are the compile warnings generated during the build a result of poor programming, or are they a product of the (possible) changes to the gcc compiler?  If the compile warnings are a result of poor programming and, as I didn't notice such warnings when initially installing MacPorts under Snow Leopard, have the compiler options to suppress such warnings changed?
As for those compiler options that were obsolete and/or ignored, is this also a result to (possible) changes to the gcc compiler, or is this a feature of the script used for rebuilding major releases of MacPorts?

A: I encounter this most when I see compile flags including -Wall (warn all) which a great deal of open source devs tend to use.  Warnings are not always bad or even worrisome.  
If you're paranoid, take the time to go through and investigate each of the warnings but before you do that try compiling some code of your own with the warn all flag set for gcc and see how many warnings you get.  They are quite common. 

A: Recompile warnings - some programmers will remove all warnings as being a good idea whilst others leave them as they are only warnings. I favour the former interpretation but that view is not universal so you can't say a lot of warnings is a problem unfortunately
For macports I would worry about ignored gcc command line errors - so we need to see some of these 
