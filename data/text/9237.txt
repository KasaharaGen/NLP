Q: Send background email alert if Time Machine backup fails Curious if there is an easy way to send a background email alert if a Time Machine backup fails (or continuously fails rather than just one time)
I've found TM Error Logger however, it cannot run in the background, and also generates the email through the systems default mail client, which then needs to be manually sent.
Ideally I'd like a solution that does this in the background without any input or action from the end user - so that I can be notified if their machines aren't backing up.
The trouble is many users don't realize that Time Machine may not be working for them - they don't know to look for the "!" in the TM menu bar icon (or often what it means)

A: This is a great use case for a simple shell or python or ruby script and launchd.
I'll assume you can find on this site how to configure the launchd item or want to buy Lingon which is a great timesaver. (Be aware Lingon 3 is for Lion and there is another also paid version for Snow Leopard just named Lingon on the App store)
You also will need to set up an internal mail server that accepts command line mail from all your clients, so there is that large chunk of setup.
With all that "hand waving" to explain broad concepts - you now could use these core commands to get the job done:

*

*tmutil startbackup --block

*date "+%Y-%m-%d"

*mail -s "TimeMachine Failure Report from $HOSTNAME" "This mac needs attention"
Depending on how much fun this sounds, you can pick apart each task and work on them or look into software that is designed to do this for you like Apple Remote Desktop or Robot Cloud.

A: I recently released a Mac app called TMNotifier that will run in the background and notify you when a Time Machine error occurs. It also doesn't depend on the default mail client, since it lets you configure SMTP in the app itself.

Here's an example of what the alerts look like:


A: As bmike says, you can use lingon. or manually make you own launch agent
Here is a test example.
My time machine device was not plugged in. So backups would fail.
I used an applescript saved as text and with the osascript shebang at the top.
    #!/usr/bin/osascript
property i_The_Sender : "senderAddress1@ip.com"
property theAddress2 : "recipientAddress@ip.com"
set userNAME to ""
tell application "System Events"
    set userNAME to full name of current user
end tell
property theSubject : "TimeMachine Failure Report from "

set tm to do shell script "/usr/bin/syslog -F '$Time $Message' -k Sender com.apple.backupd -k Time ge -59m | tail -n 3"

if tm contains "failed" then
    set otherLog to do shell script "/usr/bin/syslog -F '$Time $Message' -k Sender com.apple.backupd-helper -k Time ge -59m | tail -n 20"
    tell application "Mail"
        set newMessage to make new outgoing message with properties {subject:(theSubject & userNAME), content:tm & return & otherLog}
        tell newMessage

            set visible to false
            set sender to i_The_Sender
            make new to recipient at end of to recipients with properties {address:theAddress2}

            send --<<<<---------------- change save to send to send or send to save to save in drafts

        end tell
    end tell

end if

This means I can run the Applescript as a native shell script.
The script will also send the email in the background. It does launch mail.app but not in focus. Nor will it bring mail.app to focus if mail.app is already running.
chmod the applescript text file as you would a normal wheel script file to give it execute permissions .ie.  chmod a+x /path/tp/file
Using lingon:
choose the file and you run options. Save and load.
If you do it manually then place the file you launch agent file in ~/Library/LaunchAgents/


A: Time Machine failing - get alerted by Growl I think it already says it. But okay... I wrote a script which checks the age of the last successful time machine backup and alerts by growl if it is too old.
